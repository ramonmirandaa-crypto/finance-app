version: '3.8'

services:
  # 1. Contêiner temporário para clonar o repositório
  init:
    image: alpine/git:latest
    # Comando para clonar o repositório para a pasta /source
    # ATENÇÃO: Substitua <SEU_USUARIO> e <SEU_TOKEN> abaixo
    command: >
      sh -c "git clone https://<SEU_USUARIO>:<SEU_TOKEN>@github.com/ramonmirandaa-crypto/finance-app.git /source && chmod -R 777 /source"
    volumes:
      - source-code:/source # Monta o volume nomeado 'source-code' na pasta /source

  # 2. Contêiner da Aplicação Backend
  backend:
    image: node:18-alpine
    container_name: finance-app-backend
    restart: unless-stopped
    working_dir: /usr/src/app
    volumes:
      - source-code:/usr/src/app # Usa os arquivos do volume 'source-code'
    ports:
      - "3333:3333"
    environment:
      - DATABASE_HOST=db
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_NAME=${POSTGRES_DB}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      db:
        condition: service_healthy # Garante que o DB esteja saudável
      init:
        condition: service_completed_successfully # Garante que o 'init' terminou com sucesso

  # 3. Contêiner do Banco de Dados (sem alterações)
  db:
    image: postgres:15-alpine
    container_name: finance-app-postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - /mnt/dados/finance-app/postgres-data:/var/lib/postgresql/data

# 4. Define o 'disco virtual' (volume nomeado) que será compartilhado
volumes:
  source-code:
